// Mixin to display the name of the macro or content to debug
@mixin debug-macro-frame($name) {
  position: relative;
  top: -2px;
  left: 10px;
  font-family: 'Courier New', Courier, monospace;
  content: $name;
  font-size: 14px;
  font-weight: bold;
  padding: 5px 10px 5px 10px;
  border-radius: 10px;
  background-color: rgb(228, 220, 220);
  color: var(--font-color);
}

// Debug columns layout
#Content {
  .columnLayout {
    &.two-left-sidebar {
      background-color: rgb(249, 215, 186);
    }
    &.two-right-sidebar {
      background-color: rgb(255, 241, 185);
    }
    &.two-equal {
      background-color: rgb(212, 247, 159);
    }
    &.three-equal {
      background-color: rgb(125, 173, 232);
    }
    &.three-with-sidebars {
      background-color: rgb(174, 220, 238);
    }
  }

  .aside {
    border-style: double;
    border-color: royalblue;
    border-width: 4px;
    &::before {
      @include debug-macro-frame('smaller-column');
    }
  }

  .normal {
    border-style: double;
    border-color: hotpink;
    border-width: 4px;
    &::before {
      @include debug-macro-frame('normal-column');
    }
  }

  .sidebars {
    border-style: double;
    border-color: steelblue;
    border-width: 4px;
    &::before {
      @include debug-macro-frame('sidebars');
    }
  }
}

// Debug unsupported macros
.unsupported-macro-indicator {
  margin: 10px;
  padding: 10px;
  background: rgb(253, 217, 217);
  border: 1px solid red;
  border-radius: 5px;

  .cross {
    position: absolute;
    right: 25px;
    border-radius: 20px;
    width: 20px;
    height: 20px;
    font-size: 15px;
    text-align: center;
    background: red;
    color: white;

    &::before {
      content: 'x';
    }

    &:hover {
      cursor: pointer;
    }
  }
}

// Debug supported macros
.debug-macro-indicator {
  background: rgb(222, 181, 247);
  border: 1px solid rgb(162, 0, 255);
  border-radius: 5px;

  &.debug-fixToc {
    &::before {
      @include debug-macro-frame('macro-TOC');
    }
  }

  &.debug-fixCode {
    &::before {
      @include debug-macro-frame('macro-code');
    }
  }

  &.debug-fixEmbeddedFile-thumbnail {
    &::before {
      @include debug-macro-frame('thumbnail-file');
    }
  }

  &.debug-fixEmbeddedFile-inline {
    &::before {
      @include debug-macro-frame('inline-file');
    }
  }

  &.debug-fixCaptionImage-caption {
    &::before {
      @include debug-macro-frame('image-caption');
    }
  }

  &.debug-fixCaptionImage-inline {
    &::before {
      @include debug-macro-frame('image-inline');
    }
  }

  &.debug-fixVideo-embedded {
    &::before {
      @include debug-macro-frame('embedded-video');
    }
  }
}

// Tables legacy layout
table.confluenceTable {
  &[data-layout='default'],
  &[data-layout='wide'],
  &[data-layout='full-width'] {
    background-color: #ffdada;
  }
}

// Tables legacy layout
table.confluenceTable {
  &[data-layout='center'],
  &[data-layout='align-start'] {
    background-color: #e5fdef;
  }
}

// Excerpt included in a page
.panel[data-macro-name='excerpt-include'] {
  &::before {
    @include debug-macro-frame('excerpt-include');
  }
  background-color: #d0f4d2;
}